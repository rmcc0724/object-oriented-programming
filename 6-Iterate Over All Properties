You have now seen two kinds of properties: own properties and prototype properties. Own properties are defined directly on the object instance itself. And prototype properties are defined on the prototype.

function Bird(name) {
  this.name = name; //own property
}

Bird.prototype.numLegs = 2; // prototype property

let duck = new Bird("Donald");
Here is how you add duckâ€™s own properties to the array ownProps and prototype properties to the array prototypeProps:

let ownProps = [];
let prototypeProps = [];

for (let property in duck) {
  if(duck.hasOwnProperty(property)) {
    ownProps.push(property);
  } else {
    prototypeProps.push(property);
  }
}

console.log(ownProps); // prints ["name"]
console.log(prototypeProps); // prints ["numLegs"]

Add all of the own properties of beagle to the array ownProps. Add all of the prototype properties of Dog to the array prototypeProps.

//Create a function constructor call Dog
function Dog(name) {
  this.name = name;
}

//Add a prototype property call NumLegs
Dog.prototype.numLegs = 4;

//Create a new instanceof Dog calld beagle
let beagle = new Dog("Snoopy");

//Create 2 new empty arrays called ownProps and prototypeProps
let ownProps = [];
let prototypeProps = [];

//Iterate through the properties in beagle and if an ownProp is found then push that prop into the ownProps else push into the prototypeProps array
for(let property in beagle){
  if(beagle.hasOwnProperty(property)){
    ownProps.push(property);}
    else {
      prototypeProps.push(property);
    }
  }
